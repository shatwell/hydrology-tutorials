knitr::kable(tabdata)
knitr::opts_chunk$set(echo = TRUE)
library(readr)     # modernized functions to read rectangular data like csv
library(dplyr)     # the most essential tidyverse packages
library(tidyr)     # contains for example pivot tables
library(lubridate) # a tidyverse package for dates
library(ggplot2)   # high level plotting with the grammar of graphics
#| echo: false
#| tbl-cap: "Kenngrößen des Abflusses"
library(readr)
tabdata <- read.csv("data/HQ-table.csv")
knitr::kable(tabdata)
plot(YSPALTE ~ XSPALTE, data = elbe, type = "l")
ggplot(data = elbe) +
geom_line(aes(x = XSPALTE, y = YSPALTE))
knitr::opts_chunk$set(echo = TRUE)
library(readr)     # modernized functions to read rectangular data like csv
library(dplyr)     # the most essential tidyverse packages
library(tidyr)     # contains for example pivot tables
library(lubridate) # a tidyverse package for dates
library(ggplot2)   # high level plotting with the grammar of graphics
#| echo: false
#| tbl-cap: "Kenngrößen des Abflusses"
library(readr)
tabdata <- read.csv("data/HQ-table.csv")
knitr::kable(tabdata)
ggplot(data = elbe) +
geom_line(aes(x = date, y = discharge))
summary(elbe$discharge)
# Minimum NNQ:
print("NNQ:")
elbe[which.min(elbe$discharge), "date"]
# Maximum HHQ:
print("HHQ:")
elbe[which.max(elbe$discharge), "date"]
elbe$jahr <- year(elbe$date)
head(elbe)
jahresNQ <- aggregate(DATASPALTE ~ GRUPPIERSPALTE, data = elbe, FUN = min)
NQ <- aggregate(discharge ~ jahr, data = elbe, FUN = min)
print("NQ")
head(NQ)
tail(NQ)
MNQ <- mean(NQ$discharge)
MNQ
HQ <- aggregate(discharge ~ jahr, data = elbe, FUN = max)
MHQ <- mean(HQ$discharge)
head(HQ)
tail(HQ)
print("MHQ")
MHQ
tracer <- read.csv("data/tracer.csv")
head(tracer, 4)
tail(tracer, 4)
plot(tracer, type="l", main="5 kg tracer addition at t=0",
ylim=c(0,0.45))
C0 <- mean(tracer[tracer$time < 10, "conc"])
print("C0")
C0
tracer$conc0 <- tracer$conc - C0
plot(conc0~time, tracer, type="l")
dt <- tracer[2, "time"] - tracer[1, "time"]
dt
int <- sum(tracer$conc0 * dt)
int
getwd()
knitr::opts_chunk$set(echo = TRUE)
library(readr)     # modernized functions to read rectangular data like csv
library(dplyr)     # the most essential tidyverse packages
library(tidyr)     # contains for example pivot tables
library(lubridate) # a tidyverse package for dates
library(ggplot2)   # high level plotting with the grammar of graphics
head(schorgast)
class(schorgast$Datum)
2/1,7
2/1.7
1.7/.2
2/8.5
W <- function(d) {
w1 <- (1/d[1]^2) / (1/d[2]^2 + 1 / d[3]^2 + 1/d[4]^2)
w2 <- (1/d[2]^2) / (1/d[1]^2 + 1 / d[3]^2 + 1/d[4]^2)
w3 <- (1/d[3]^2) / (1/d[2]^2 + 1 / d[1]^2 + 1/d[4]^2)
w4 <- (1/d[4]^2) / (1/d[2]^2 + 1 / d[3]^2 + 1/d[1]^2)
return(c(w1, w2, w3, w4))
}
W(c(2,3,4,5))
W <- function(d) {
w1 <- (1/d[1]^2) / (1/d[1]^2 + 1/d[2]^2 + 1 / d[3]^2 + 1/d[4]^2)
w2 <- (1/d[2]^2) / (1/d[1]^2 + 1/d[2]^2 + 1 / d[3]^2 + 1/d[4]^2)
w3 <- (1/d[3]^2) / (1/d[1]^2 + 1/d[2]^2 + 1 / d[3]^2 + 1/d[4]^2)
w4 <- (1/d[4]^2) / (1/d[1]^2 + 1/d[2]^2 + 1 / d[3]^2 + 1/d[4]^2)
return(c(w1, w2, w3, w4))
}
W(c(2,3,4,5))
sum(W(c(2,3,4,5)))
sum(W(c(0.2,3,4,5)))
W(c(0.2,3,4,5))
W(c(0.8,3,4,5))
library(seefo)
# install.packages("devtools")
devtools::install_github(repo="shatwell/seefo", host="https://github.com/")
install.packages("devtools")
library(remoters)
library(remotes)
?remotres
?remotes
?install_github
# install.packages("devtools")
remotes::install_github(repo="shatwell/seefo")
library(seefo)
?read_bbe
data(seefo)
bbe_loc <- system.file("extdata", package="seefo")
bbe_name <- file.path(bbe_loc,  "profiles","20170801","YT1_20170801_1..FP2101")
bbe <- read_bbe(bbe_name)
head(bbe)
bbe
plot(depth~total_conc, data = bbe, ylim = (max(bbe$depth, 0)))
plot(depth~total_conc, data = bbe, ylim = (max(bbe$depth), 0))
plot(depth~total_conc, data = bbe, ylim = c(max(bbe$depth), 0))
plot(depth~total_conc, data = bbe, ylim = c(max(bbe$depth), 0),
type = "n", xlab = "Konzentration", ylab = "Tiefe, (m)")
plot(depth~total_conc, data = bbe, ylim = c(max(bbe$depth), 0),
type = "n", xlab = "Konzentration", ylab = "Tiefe (m)")
vars <- c("Green_Algae", "Bluegreen", "Diatoms", "Cryptophyta", "Yellow_substances", "total_conc")
cols <- c("green", "blue", "brown", "red", "orange", "black")
for(i in 1:length(vars)) lines(bbe[, c(vars[i], "depth")], col = cols[i])
plot(depth~total_conc, data = bbe, ylim = c(max(bbe$depth), 0),
type = "n", xlab = "Konzentration", ylab = "Tiefe (m)")
vars <- c("Green_Algae", "Bluegreen", "Diatoms", "Cryptophyta", "Yellow_substances", "total_conc")
cols <- c("green", "blue", "brown", "red", "orange", "black")
lwds <- c(1, 1, 1, 1, 1, 2)
for(i in 1:length(vars)) {
lines(bbe[, c(vars[i], "depth")], col = cols[i], lwd = lwds[i])
}
legend("bottomright", legend = vars, col = cols, lwd = lwds, bty = "n")
plot(depth~sample_temperature, data = bbe, ylim = c(max(bbe$depth), 0),
type = "l", xlab = "Temperatur (°C)", ylab = "Tiefe (m)",
main = "Temperatur")
dirname(rstudioapi::getActiveDocumentContext()$path)
dirname(rstudioapi::getActiveDocumentContext()$path)
?batch_read
library(seefo)
PATH <- dirname(rstudioapi::getActiveDocumentContext()$path)
rm(list=ls())
library(seefo)
PATH <- dirname(rstudioapi::getActiveDocumentContext()$path)
bbe <- batch_read(sonde = "bbe", path = PATH)
bbe
plot(depth~total_conc, data = bbe, ylim = c(max(bbe$depth), 0),
type = "n", xlab = "Konzentration", ylab = "Tiefe (m)")
vars <- c("Green_Algae", "Bluegreen", "Diatoms", "Cryptophyta",
"Yellow_substances", "total_conc")
cols <- c("green", "blue", "brown", "red", "orange", "black")
lwds <- c(1, 1, 1, 1, 1, 2)
for(i in 1:length(vars)) {
lines(bbe[, c(vars[i], "depth")], col = cols[i], lwd = lwds[i])
}
legend("bottomright", legend = vars, col = cols, lwd = lwds, bty = "n")
plot(depth~sample_temperature, data = bbe, ylim = c(max(bbe$depth), 0),
type = "l", xlab = "Temperatur (°C)", ylab = "Tiefe (m)",
main = "Temperatur")
prdts <- unique(bbe$pr_dt)
rm(list = ls())
library(seefo)
PATH <- dirname(rstudioapi::getActiveDocumentContext()$path)
bbe <- batch_read(sonde = "bbe", path = PATH)
algale_profile <- function(PRDT) {
vars <- c("Green_Algae", "Bluegreen", "Diatoms", "Cryptophyta",
"Yellow_substances", "total_conc")
cols <- c("green", "blue", "brown", "red", "orange", "black")
lwds <- c(1, 1, 1, 1, 1, 2)
plot(depth~total_conc, data = bbe, subset = pr_dt == PRDT,
ylim = c(max(bbe$depth), 0),
type = "n", xlab = "Konzentration", ylab = "Tiefe (m)",
main = paste("BBE", PRDT))
for(i in 1:length(vars)) {
lines(bbe[, c(vars[i], "depth")], col = cols[i], lwd = lwds[i])
}
legend("bottomright", legend = vars, col = cols, lwd = lwds, bty = "n")
}
temp_profile <- function(PRDT) {
plot(depth~sample_temperature, data = bbe, subset = pr_dt == PRDT,
ylim = c(max(bbe$depth), 0),
type = "l", xlab = "Temperatur (°C)", ylab = "Tiefe (m)",
main = paste("Temperatur", PRDT))
}
prdts <- unique(bbe$pr_dt)
prdts
for(j in prdts) {
algae_profile(j)
}
algae_profile <- function(PRDT) {
vars <- c("Green_Algae", "Bluegreen", "Diatoms", "Cryptophyta",
"Yellow_substances", "total_conc")
cols <- c("green", "blue", "brown", "red", "orange", "black")
lwds <- c(1, 1, 1, 1, 1, 2)
plot(depth~total_conc, data = bbe, subset = pr_dt == PRDT,
ylim = c(max(bbe$depth), 0),
type = "n", xlab = "Konzentration", ylab = "Tiefe (m)",
main = paste("BBE", PRDT))
for(i in 1:length(vars)) {
lines(bbe[, c(vars[i], "depth")], col = cols[i], lwd = lwds[i])
}
legend("bottomright", legend = vars, col = cols, lwd = lwds, bty = "n")
}
for(j in prdts) {
algae_profile(j)
}
algae_profile <- function(PRDT) {
vars <- c("Green_Algae", "Bluegreen", "Diatoms", "Cryptophyta",
"Yellow_substances", "total_conc")
cols <- c("green", "blue", "brown", "red", "orange", "black")
lwds <- c(1, 1, 1, 1, 1, 2)
plot(depth~total_conc, data = bbe, subset = pr_dt == PRDT,
ylim = c(max(bbe$depth), 0),
type = "n", xlab = "Konzentration", ylab = "Tiefe (m)",
main = paste("BBE", PRDT))
for(i in 1:length(vars)) {
lines(bbe[bbe$pr_dt == PRDT, c(vars[i], "depth")],
col = cols[i], lwd = lwds[i])
}
legend("bottomright", legend = vars, col = cols, lwd = lwds, bty = "n")
}
temp_profile <- function(PRDT) {
plot(depth~sample_temperature, data = bbe, subset = pr_dt == PRDT,
ylim = c(max(bbe$depth), 0),
type = "l", xlab = "Temperatur (°C)", ylab = "Tiefe (m)",
main = paste("Temperatur", PRDT))
}
prdts <- unique(bbe$pr_dt)
for(j in prdts) {
algae_profile(j)
}
algae_profile <- function(PRDT) {
vars <- c("Green_Algae", "Bluegreen", "Diatoms", "Cryptophyta",
"Yellow_substances", "total_conc")
cols <- c("green", "blue", "brown", "red", "orange", "black")
lwds <- c(1, 1, 1, 1, 1, 2)
plot(depth~total_conc, data = bbe, subset = pr_dt == PRDT,
ylim = c(max(bbe$depth), 0),
xlim = c(0, max(bbe[bbe$pr_dt == PRDT, "total_conc"])),
type = "n", xlab = "Konzentration", ylab = "Tiefe (m)",
main = paste("BBE", PRDT))
for(i in 1:length(vars)) {
lines(bbe[bbe$pr_dt == PRDT, c(vars[i], "depth")],
col = cols[i], lwd = lwds[i])
}
legend("bottomright", legend = vars, col = cols, lwd = lwds, bty = "n")
}
temp_profile <- function(PRDT) {
plot(depth~sample_temperature, data = bbe, subset = pr_dt == PRDT,
ylim = c(max(bbe$depth), 0),
type = "l", xlab = "Temperatur (°C)", ylab = "Tiefe (m)",
main = paste("Temperatur", PRDT))
}
prdts <- unique(bbe$pr_dt)
for(j in prdts) {
algae_profile(j)
}
format(prdts[1])
algae_profile <- function(PRDT) {
vars <- c("Green_Algae", "Bluegreen", "Diatoms", "Cryptophyta",
"Yellow_substances", "total_conc")
cols <- c("green", "blue", "brown", "red", "orange", "black")
lwds <- c(1, 1, 1, 1, 1, 2)
plot(depth~total_conc, data = bbe, subset = pr_dt == PRDT,
ylim = c(max(bbe$depth), 0),
xlim = c(0, max(bbe[bbe$pr_dt == PRDT, "total_conc"])),
type = "n", xlab = "Konzentration", ylab = "Tiefe (m)",
main = paste("BBE", format(PRDT)))
for(i in 1:length(vars)) {
lines(bbe[bbe$pr_dt == PRDT, c(vars[i], "depth")],
col = cols[i], lwd = lwds[i])
}
legend("bottomright", legend = vars, col = cols, lwd = lwds, bty = "n")
}
temp_profile <- function(PRDT) {
plot(depth~sample_temperature, data = bbe, subset = pr_dt == PRDT,
ylim = c(max(bbe$depth), 0),
type = "l", xlab = "Temperatur (°C)", ylab = "Tiefe (m)",
main = paste("Temperatur", PRDT))
}
prdts <- unique(bbe$pr_dt)
for(j in prdts) {
algae_profile(j)
}
as.character(format(prdts[1]))
algae_profile <- function(PRDT) {
vars <- c("Green_Algae", "Bluegreen", "Diatoms", "Cryptophyta",
"Yellow_substances", "total_conc")
cols <- c("green", "blue", "brown", "red", "orange", "black")
lwds <- c(1, 1, 1, 1, 1, 2)
plot(depth~total_conc, data = bbe, subset = pr_dt == PRDT,
ylim = c(max(bbe$depth), 0),
xlim = c(0, max(bbe[bbe$pr_dt == PRDT, "total_conc"])),
type = "n", xlab = "Konzentration", ylab = "Tiefe (m)",
main = paste("BBE", as.character(format(PRDT))))
for(i in 1:length(vars)) {
lines(bbe[bbe$pr_dt == PRDT, c(vars[i], "depth")],
col = cols[i], lwd = lwds[i])
}
legend("bottomright", legend = vars, col = cols, lwd = lwds, bty = "n")
}
temp_profile <- function(PRDT) {
plot(depth~sample_temperature, data = bbe, subset = pr_dt == PRDT,
ylim = c(max(bbe$depth), 0),
type = "l", xlab = "Temperatur (°C)", ylab = "Tiefe (m)",
main = paste("Temperatur", PRDT))
}
prdts <- unique(bbe$pr_dt)
for(j in prdts) {
algae_profile(j)
}
library(lubridate)
hour(prdts[1])
minute(prdts[1])
date(prdts[1])
algae_profile <- function(PRDT) {
vars <- c("Green_Algae", "Bluegreen", "Diatoms", "Cryptophyta",
"Yellow_substances", "total_conc")
cols <- c("green", "blue", "brown", "red", "orange", "black")
lwds <- c(1, 1, 1, 1, 1, 2)
plot(depth~total_conc, data = bbe, subset = pr_dt == PRDT,
ylim = c(max(bbe$depth), 0),
xlim = c(0, max(bbe[bbe$pr_dt == PRDT, "total_conc"])),
type = "n", xlab = "Konzentration", ylab = "Tiefe (m)",
main = paste("BBE", paste0(date(PRDT), " ", hour(PRDT), ":", minute(PRDT))))
for(i in 1:length(vars)) {
lines(bbe[bbe$pr_dt == PRDT, c(vars[i], "depth")],
col = cols[i], lwd = lwds[i])
}
legend("bottomright", legend = vars, col = cols, lwd = lwds, bty = "n")
}
temp_profile <- function(PRDT) {
plot(depth~sample_temperature, data = bbe, subset = pr_dt == PRDT,
ylim = c(max(bbe$depth), 0),
type = "l", xlab = "Temperatur (°C)", ylab = "Tiefe (m)",
main = paste("Temperatur", PRDT))
}
prdts <- unique(bbe$pr_dt)
for(j in prdts) {
algae_profile(j)
}
warnings()
algae_profile <- function(PRDT) {
vars <- c("Green_Algae", "Bluegreen", "Diatoms", "Cryptophyta",
"Yellow_substances", "total_conc")
cols <- c("khaki", "steelblue2", "brown", "red", "orange", "black")
lwds <- c(1, 1, 1, 1, 1, 2)
plot(depth~total_conc, data = bbe, subset = pr_dt == PRDT,
ylim = c(max(bbe$depth), 0),
xlim = c(0, max(bbe[bbe$pr_dt == PRDT, "total_conc"])),
type = "n", xlab = "Konzentration", ylab = "Tiefe (m)",
main = paste("BBE", paste0(date(PRDT), " ", hour(PRDT), ":", minute(PRDT))))
for(i in 1:length(vars)) {
lines(bbe[bbe$pr_dt == PRDT, c(vars[i], "depth")],
col = cols[i], lwd = lwds[i])
}
legend("bottomright", legend = vars, col = cols, lwd = lwds, bty = "n")
}
temp_profile <- function(PRDT) {
plot(depth~sample_temperature, data = bbe, subset = pr_dt == PRDT,
ylim = c(max(bbe$depth), 0),
type = "l", xlab = "Temperatur (°C)", ylab = "Tiefe (m)",
main = paste("Temperatur", PRDT))
}
prdts <- unique(bbe$pr_dt)
for(j in prdts) {
algae_profile(j)
}
rowcol <- function(x) {
n<-min(4,ceiling(x/ceiling(sqrt(x))))
m<-ceiling(x/n)
return(c(m,n))
}
rowcol(12)
rowcol(13)
combn(x=1:4, m=2)
combn(x=c("a", "b", "c"), m=2)
combn(x=c("a", "b", "c"), m=4)
combn(x=c("a", "b", "c"), m=3)
combn(x=c("a", "b", "c"), m=1)
combn(x=c("a", "b", "c"), m=2)
?combn
combn(x=letters{1:10}, m=2)
combn(x=letters[1:10], m=2)
combn(x=letters[1:6], m=2)
combn(x=letters[1:6], m=3)
combn(x=letters[1:6], m=1)
combn(x=letters[1:6], m=6)
combn(x=letters[1:6], m=4)
library(seefo)
library(lubridate)
PATH <- dirname(rstudioapi::getActiveDocumentContext()$path)
bbe <- batch_read(sonde = "bbe", path = PATH)
algae_profile <- function(PRDT) {
vars <- c("Green_Algae", "Bluegreen", "Diatoms", "Cryptophyta",
"Yellow_substances", "total_conc")
cols <- c("khaki", "steelblue2", "brown", "red", "orange", "black")
lwds <- c(1, 1, 1, 1, 1, 2)
prdtex <- paste0(date(PRDT), " ", hour(PRDT), ":", minute(PRDT))
plot(depth~total_conc, data = bbe, subset = pr_dt == PRDT,
ylim = c(max(bbe$depth), 0),
xlim = c(0, max(bbe[bbe$pr_dt == PRDT, "total_conc"])),
type = "n", xlab = "Konzentration", ylab = "Tiefe (m)")
mtext(text = paste("BBE", prdtex), side = 3, line = 1)
for(i in 1:length(vars)) {
lines(bbe[bbe$pr_dt == PRDT, c(vars[i], "depth")],
col = cols[i], lwd = lwds[i])
}
legend("bottomright", legend = vars, col = cols, lwd = lwds, bty = "n")
}
temp_profile <- function(PRDT) {
plot(depth~sample_temperature, data = bbe, subset = pr_dt == PRDT,
ylim = c(max(bbe$depth), 0),
type = "l", xlab = "Temperatur (°C)", ylab = "Tiefe (m)",
main = paste("Temperatur", PRDT))
}
prdts <- unique(bbe$pr_dt)
for(j in prdts) {
algae_profile(j)
}
rowcol <- function(x) {
n<-min(4,ceiling(x/ceiling(sqrt(x))))
m<-ceiling(x/n)
return(c(m,n))
}
plot_bbes <- function() {
matdim <- rowcol(length(prdts))
if(matdim[1]>10) matdim[1] <- 10
if(matdim[2]>5) matdim[2] <- 5
layout(matrix(1:(matdim[1]*matdim[2]), nrow=matdim[1],
ncol=matdim[2],byrow=TRUE))
for (k in 1:length(prdts)) {
algae_profile(prdts[k])
}
# mtext(text = targvar, side = 3, line = 3, outer = TRUE, cex = 2)
}
plot_bbes
plot_bbes()
getwd()
PATH
source("~/Teaching/Limnologie/fielddata/read_bbe.R", echo=TRUE)
plot_temps <- function() {
matdim <- rowcol(length(prdts))
if(matdim[1]>10) matdim[1] <- 10
if(matdim[2]>5) matdim[2] <- 5
layout(matrix(1:(matdim[1]*matdim[2]), nrow=matdim[1],
ncol=matdim[2],byrow=TRUE))
for (k in 1:length(prdts)) {
temp_profile(prdts[k])
}
# mtext(text = targvar, side = 3, line = 3, outer = TRUE, cex = 2)
}
pdf(file = file.path(PATH, "Temperaturprofile.pdf"),
width = 7.5, height = 10, onefile = TRUE, paper = "a4",
pointsize = 9)
par(mar=c(4,4,0.2,0.2),oma=c(0.5,0.5,5,0.5), mgp=c(2.5,0.8,0))
plot_temps()
dev.off()
source("~/Teaching/Limnologie/fielddata/read_bbe.R", echo=TRUE)
source("~/Teaching/Limnologie/fielddata/read_bbe.R", echo=TRUE)
source("~/Teaching/Limnologie/fielddata/read_bbe.R", echo=TRUE)
dev.off()
dev.off()
source("~/Teaching/Limnologie/fielddata/read_bbe.R", echo=TRUE)
dev.off()
source("~/Teaching/Limnologie/fielddata/read_bbe.R", echo=TRUE)
temp_profile <- function(PRDT, labs = TRUE) {
prdtex <- paste0(date(PRDT), " ", hour(PRDT), ":", minute(PRDT))
plot(depth~sample_temperature, data = bbe, subset = pr_dt == PRDT,
ylim = c(max(bbe$depth), 0),
type = "l", xlab = "Temperatur (°C)", ylab = "Tiefe (m)")
mtext(text = paste("BBE", prdtex), side = 3, line = 1)
if(labs) {
mtext(text = "Temp (°C)", side = 1)
mtext(text = "Tiefe (m)", side = 2)
}
}
temp_profile(prdts[1])
temp_profile(prdts[1], labs=FALSE)
source("~/Teaching/Limnologie/fielddata/read_bbe.R", echo=TRUE)
source("~/Teaching/Limnologie/fielddata/read_bbe.R", echo=TRUE)
source("~/Teaching/Limnologie/fielddata/read_bbe.R", echo=TRUE)
source("~/Teaching/Limnologie/fielddata/read_bbe.R", echo=TRUE)
source("~/Teaching/Limnologie/fielddata/read_bbe.R", echo=TRUE)
source("~/Teaching/Limnologie/fielddata/read_bbe.R", echo=TRUE)
PATH <- dirname(normalizePath(sys.frame(1)$ofile))
source("~/Teaching/Limnologie/fielddata/read_bbe.R", echo=TRUE)
# Try to get the path of the script reliably
get_script_path <- function() {
# Works when running via Rscript
args <- commandArgs(trailingOnly = FALSE)
file_arg <- grep("--file=", args)
if (length(file_arg) > 0) {
return(normalizePath(sub("--file=", "", args[file_arg])))
}
# Works in RStudio
if (requireNamespace("rstudioapi", quietly = TRUE) &&
rstudioapi::isAvailable()) {
return(rstudioapi::getActiveDocumentContext()$path)
}
# Fallback
stop("Cannot determine script path.")
}
# Set working directory to script location
script_path <- get_script_path()
script_path
PATH
dirname(script_path)
PATH
getwd()
